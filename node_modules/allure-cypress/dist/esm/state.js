export var getAllureState = () => {
  var state = Cypress.env("allure");
  if (!state) {
    state = {
      initialized: false,
      messages: [],
      testPlan: undefined,
      currentTest: undefined
    };
    Cypress.env("allure", state);
  }
  return state;
};
export var isAllureInitialized = () => getAllureState().initialized;
export var setAllureInitialized = () => {
  getAllureState().initialized = true;
};
export var getRuntimeMessages = () => getAllureState().messages;
export var setRuntimeMessages = value => {
  getAllureState().messages = value;
};
export var enqueueRuntimeMessage = message => {
  getRuntimeMessages().push(message);
};
export var getAllureTestPlan = () => getAllureState().testPlan;
export var getCurrentTest = () => getAllureState().currentTest;
export var setCurrentTest = test => {
  getAllureState().currentTest = test;
};
export var dropCurrentTest = () => {
  getAllureState().currentTest = undefined;
};
//# sourceMappingURL=state.js.map